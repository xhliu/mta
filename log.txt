3/7
Modify coordination & link delay sampling

3/10
change float operation to integer

3/17
add sliding window

3/25
remove beacon link estimation; pure data-driven link estimation

3/25
correct initial sample scheduling

4/8
fix cache bug

4/13
add partial flow admission

4/14
from tOR_4_14_02.zip; partial flow is added
add receiver window table management

Fri 16 Apr 2010 03:09:05 AM EDT 
add FCSs recomputation for capacity decrease

Sun 18 Apr 2010 11:43:10 PM EDT 
add FCS capacity increase

Thu 22 Apr 2010 02:49:42 AM EDT 
Optimal RTCapacity_Inc handler

Sun 25 Apr 2010 12:19:29 AM EDT 
Changed timeout estimation
Changed flow detection (places where new packets are considered arrival)
Reconsider rejected flows when RT capacity inc

Tue 27 Apr 2010 01:05:12 AM EDT 
Changed neighbor removal from neighbor table and flow table
Detection of FC not keeping reception window for sender

Wed 28 Apr 2010 01:11:23 AM EDT 
Add prediction and queueing delay
Changed coordination delay unit estimation

Sun 02 May 2010 02:18:02 PM EDT 
Change flow table management

Thu 20 May 2010 11:19:55 PM EDT 
Change root behavior

6/13
Change FCS selection

6/14 11:49 AM
Change ETX scale

6/14 17:41 PM
L-ETX & OR

6/20
Add timeout quantile estimation

6/21  	01 AM
Add engineering hack

6/21  	15 PM
Correct engineering hack

6/22	15 PM
relayed ACK
ACK duplicate suppression

6/25/10 3:11 PM
Begin changing quantile estimation from EWSA to P^2

6/28/10 3:47 PM
Begin changing neighbor table management

6/29/10 11:19 AM
Begin changing receiver window table management

6/30/10 4:14 PM
Begin changing receiver window table management to LRU

6/30/10 5:27 PM
Begin change initial sampling

7/2/10 1:15 PM
Start 2 change ANT management from FCFS to kick out the worst one always
Start 2 add collision avoidance to initial sampling

7/2/10 3:43 PM
Start 2 add loop detection

7/4/10 9:21 AM
Correct diffusion

7/4/10 9:21 PM
start 2 change ack delay quantile estimation

7/5/10 2:48 PM
start implement L-ETX by regarding it as special OR w/ FCS size constantly 1

7/5/10 5:18 PM
Copy similar to EXOR: put all possible predecessors in FCS w/o considering whether inclusion will dec overall ETX

7/5/10 10:35 PM
Start to change coordination unit from average packet time to quantile

7/8/10 11:09 AM
ETX -> generic addictive metric diffusion Done
Start L-ML

7/8/10 4:31 PM
begin to change log format: node id length, other fields

7/9/10 11:34 AM
Begin correct OPMD

7/10/10 10:12 PM
FCSs recompute if OPMD thru a neighbor changes significantly

7/12/10 6:33 PM
Save buggy version of simple tOR

7/12/10 10:36 PM
Save buggy version of simple tOR again after "diff" check (contains L-ML)
"diff.txt" contains distinction of this version against "OR_7_8_11_09.zip"

7/13/10 1:33 AM
Start re-implement s-tOR based on "BestOR.zip"

7/13/10 5:32 AM
Save working s-tOR w/o FCS recomputation

7/13/10 11:47 AM
Save workable s-tOR w/ "last_min_delays" as "working_s_tOR_w_newFields.zip"

7/13/10 12:36 PM
Save complete s-tOR as "workable_s_tOR_7_13_12_36.zip"

7/14/10 12:25 AM
Correct log issues and save complete s-tOR w/ re-computaion as "s_tOR_7_14_00_25.zip"
Start SPEED and save intermediate version "ongoing_SPEED.zip"

7/14/10 12:51 PM
Change s-tOR link delay estimation to receiver-assisted

7/14/10 4:29 PM
Remove a bug: base station never sends back ACK

7/14/10 7:38 PM
Save s-tOR w/ receiver-assisted link delay estimation

7/14/10 7:50 PM
Add an option: regard expired packets from flow w/ smallest deadline, instead of dropping

7/14/10 9:24 PM
Save t-OR w/ option of not dropping expired packets as "s_tOR_noExpireDrop_7_14_21_22.zip"
Resume SPEED

7/15/10 4:29 AM
Remove minimization from OR; leave it only for tOR

7/15/10 8:54 AM
Save SPEED

7/15/10 8:36 PM
Put source packet generation time in applicaiton payload to compute E2E latency (reduce UART corruption prob.)

7/16/10 2:10 AM
Change UART log component
Ready to try IOWA
Reduce MAX_FCSS_SIZE to 1

7/17/10 3:59 AM
tOR w/ my synchronization(commander-approach)

7/17/10 10:08 PM
Start from "7/17/10 4:57 PM"
add adaptive threshold for link delay -- working
set coordination after compute new FCS -- working
remove flow-level rejection -- working
MD overflow -- working (corrected for root, do not update)
save as "s-tOR_7_18_2_04.zip"

7/18/10 3:39 AM
Correct ML/SPEED

7/18/10 3:02 PM
Ready to change to MMSPEED

7/18/10 11:23 PM
Change NeighborTable$bestNb

7/19/10 5:56 AM
Save first working MMSPEED w/o priority queue
Ready to order neighbors by reliability

7/19/10 6:56 AM
Save MMSPEED version of ordering neighbors

7/21/10 3:39 PM
Correct MMSPEED same source id for different copies problem

7/22/10 3:20 PM
Fully working MMSPEED w/ priority scheduling
1) speed & reliability requirement
2) multi-path
3) priority scheduling

ready to build DAG based on ML

7/22/10 11:02 PM
stOR-ML done

7/24/10 12:16 AM
Begin to change log for high tx cost analysis

7/24/10 11:56 PM
Save new log for high tx cost analysis
Ready to change ways of logging
Best tOR: no flow volume consideration, do not consider effect of newly arriving flow on delay, rely on FCS recomputation to adapt to new flow;
			recompute only for DELAY changes, not ETX bcoz delay is major concern, not tx cost
			

7/30/10 3:51 PM
Bug fix: local arrival time of a packet is not obtained from global time

8/11/10 4:16 PM
Ready to use 4bitle and unicast

9/9/10 2:24 PM
Save copy of 4bitle and unicast as "tOR_unicast_4bitle_9_9_14_24.zip"
Ready to use 4bitle and OR

9/11/10 11:04 PM
Save copy of logging for unicast SP tOR

9/12/10 2:52 PM
Save copy of stOR w/ 4bitle
Ready to change min_etx_FCS computation based on loss and gain

9/12/10 4:37 PM
Save copy of new min_etx_FCS computation based on loss and gain

9/13/10 10:43 AM
Save latest copy of new min_etx_FCS computation based on loss and gain
Ready to add unicast OPMD and forwarding

9/17/10 10:38 PM
Bug fix: invalid flow is also recomputed

9/18/10 12:24 PM
Save a copy of hybrid tOR
ready to debug extremely low reliability

9/27/10 1:39 PM
Ready to fix bug: dup is filtered prior to inbound link estimation

9/27/10 1:51 PM
Bug fixed and save a copy
Ready to check UART log reliabitliy

10/1/10 11:15 AM
Ready to add UART sendDone event loss check

10/3/10 3:59 PM
Replace old serial stack (possibly subject to uart reset changes) to latest CVS version

10/3/10 8:59 PM
Ready to change UART log according to base station

10/4/10 10:20 PM
Ready to debug node crash

10/5/10 3:27 PM
Change UartLog for TOSSIM

10/5/10 11:05 PM
Fix inf loop bug and save a copy

10/10/10 1:05 PM
Ready to complete 4bitle (comparebit and pin neighbor)
	- pin root
	- use compare bit
	
10/10/10 2:59 PM
Save 4bitle version (not verified bcoz Kansei is down)
Ready to add Markov bound for OPMD

10/11/10 10:39 PM
Save Markov bound copy

10/13/10 5:07 PM
Ready to change timeout: only compute it for the first tx and store for retx;
Caution: changes based on 4bitle version, instead of Markov bound version !!!

10/18/10 8:25 PM
Ready to make two changes:
	- OR w/ FCS size 1 --> unicast
	- Make link ETX bidirectional

10/18/10 10:44 PM
Bug fix: root does not tx received unicast packets, only broadcast ones need tx for ACK

10/19/10 3:55 PM
Save stOR using bidirectional link quality; and distinguish unicast and broadcast link quality

10/19/10 10:18 PM
Ready to add hysteresis to prevent frequent parent changes

10/20/10 11:20 PM
Ready to add tx timer control as in CTP forwarding engine

10/22/10 10:11 AM
Ready to port stOR on top of CTP

10/23/10 10:52 PM
Save stOR on CTP


	10/24/10 4:14 PM
Save latest stOR on CTP, fixing some bugs of the previous stored version
	-1/20/11 4:43 PM		confirmed its equivalency as CTP
Ready to consider ACK loss among candidates, rather that assume all are 0, which is too conservative


10/27/10 1:16 AM
Change the cache

10/27/10 4:12 AM
Save the current minimal tx cost version

11/6/10 8:00 PM
Save and ready to change link estimation

11/6/10 10:13 PM
Save current minimal tx cost version

11/7/10 1:12 PM
???Fix TYPE_UCAST_LINK_METRIC bug and save
Ready to change link estimation

11/10/10 5:33 PM
Change FCS selection:
	-root ETX to 0
	-ack outgoing, not bidirectional
	-ack loss: exact, not bound

	11/10/10 9:21 PM
???Initial sampling via unicast

11/11/10 10:00 PM
Correct bug: "path_metric = (uint32_t)ne->eetx + node_metric;" eetx is not unicast link etx

11/14/10 3:44 PM
???Correct bug: root etx <- 0 from 1
Add randomization to initial sampling

	11/15/10 10:25 AM
Save version w/ initial sampling

11/16/10 10:58 PM
Change initial FC and FC ordering by considering local link



	11/21/10 11:11 AM
Save and initialize first FC w/ unicast parent

11/28/10 11:34 PM
	Enable ACK suppression & let all nodes other than the root send

	11/29/10 2:02 PM
Save and ready to restore FCS selection: order by node ETX only and try add one by one if beneficial up to max FCS size


12/3/10 3:26 PM
restore done
	Change max beacon interval to 60000 and other settings (e.g., neighbor & flow table size)
Conditional compiling OPMD 
	Bug fix: initial sampling & getLinkQuality()

12/7/10 3:02 PM
Randomized pkt generation at sources

12/8/10 2:38 PM
Restore from version "11/29/10 2:02 PM"
redo "12/3/10 3:26 PM" & "12/7/10 3:02 PM" except "Conditional compiling OPMD" (give up bcoz of retx timeout control)
Change getParent()

	12/9/10 10:51 AM
Save closest version to CTP: get parent on the fly & disable initial sampling
	???Ready to change max beacon interval to 60000 and other settings (e.g., neighbor & flow table size)




12/9/10 1:45 PM
Ready to fix issues resulting from variable length header, like footer (abort since only application layer
is impacted, not sampling including router and initial sampler)
	Bug fix: snoop not wired in Estimator

	12/17/10 3:06 PM
Save closest version to CTP w/
1) no initial sampling
2) eetx as link metric, not forward & reverse sync ACK quality multiplication
3) get unicast parent on the fly, not flow table
Ready to add auxiliary code to measure link estimation error

12/20/10 11:36 AM
Ready to use pure data-driven.

1/6/11 4:18 PM
Bug fix: bcast_in_etx from 8 to 16 bits and initilize bcast_out_etx from 10 to INVALID_METRIC

1/6/11 9:44 PM
Bug fix: BS does not tx received unicast packet, inbound link quality cannot be piggybacked

1/7/11 3:10 PM
Use 2) forward & reverse sync ACK quality multiplication as link metric

1/9/11 5:47 PM
Bug fix: footer not used, footer process commented
Save the latest version w/ best estimation
Ready to change special measure for invalid bcast_out_etx and add retx in IS
Bug fix: IS aborted if Send.send() fails

1/13/11 10:39 AM
Save
Ready to account for estimation err
Change inbound quality DD estimation ALPHA to 0.9 from 15/16, BLQ_PKT_WINDOW from 3 to 5, for error
estimation purpose

1/19/11 3:12 PM
Revert BLQ_PKT_WINDOW from 5 to 3
Change to 5 again

1/21/11 12:15 AM
latest tOR no flow rejection

1/24/11 11:27 AM
Use "retxTimeout" field of UART log to verify log reliablity

1/26/11 10:11 PM
Change "retxTimeout" field of UART back
Save the latest tOR and closest version to CTP "tOR_CTP_1_26_22_11.tar"
Ready to format tOR_CTP "ForwarderP" to latest tOR; facilitate identifying difference

1/27/11 4:54 PM
Bug fix: hdr->fcs should be invalid for unicast packet

1/29/11 5:32 PM
Save
Ready to change retx timeout to "2 * delta + turnaround time"
delta: delay from sendDone() @ sender to Receive.receive() @ receiver

1/30/11 10:58 AM
Change delta: delay from send() @ sender to Receive.receive() @ receiver bcoz difficulty of tx sendDone() timestamp

1/31/11 1:04 PM
Bug fix: current commander-based sync works badly, ready to try FTSP 
FTSP somehow interferes w/ tOR, many things go wrong such as source id and beacon seq# (see job 903)

2/1/11 5:02 PM
Bug fix: distinguish unicast & broadcast packet when deciding whether update piggybacked neighbor's node ETX
			wire thru AMSenderC, not ActiveMessageC

2/3/11 3:32 PM
Save new adaptive retx timeout based on ACK delay

2/4/11 4:48 PM
Port to latest TinyOS distribution
Change ActiveMessageAddressC$ActiveMessageAddress$amAddress() to get correct TOS_AM_ADDRESS!!!

2/6/11 9:46 PM
Bug fix: piggybacked outbound DD link quality is not retrieved right due to retx timeout change

2/7/11 2:08 PM
Save best version which fixs timeout; yields OR (2-3%) and good tx cost (see job 1034 & 1035)

2/7/11 11:07 PM
Get rid of ForwarderP$LocalTimer, replaced by CountdownTimer

2/8/11 11:25 PM
Save
Change log to include last hop sender and save again

2/9/11 11:36 PM
Change node ETX in FCS selection from SP broadcast ETX to min{unicast ETX, OR ETX}

2/10/11 5:10 PM
Bug fix: node ETX always mistaken set to be unicast ETX caused by label
			sort by e2e ETX, not node ETX

2/10/11 10:02 PM
Save and ready to change FCS ETX computation

2/10/11 11:31 PM
Change CTP log
Bug fix: CtpPacket.getSequenceNumber() returns uint8_t rather than uint16_t

2/14/11 2:04 PM
CTP bug fix: snoop enabled CC2420_NO_ADDRESS_RECOGNITION

2/16/11 23:00 PM (inferred)
Change log to analyze coordination timing: unicast field is not explicitly included in log, but can be inferred from hdr->fcs

2/17/11 9:06 PM
Save and ready to change coordination unit

2/21/11 5:29 PM
Save and change coordination unit beginning: from tx to reception of a packet

2/22/11 6:11 PM
Save and ready to improve qtl est

2/23/11 2:49 PM
Change P2 scaling

2/25/11 3:05 PM
Save and ready to change to parametric estimation (just 7 * mean)

02/28/2011 11:45:43 AM 
Ready to change MAX_FCS_SIZE to 3 and computation of suppression ACK prob.

3/5/11 8:40 PM
Save and ready to change FCS computation

3/18/11 11:06 AM
Save and ready to remove OR
Remaining OR issues:
link correlation
precise ACK suppression probability
!compare optimal OR ETX from Minnesota vs unicast ETX to analyze the potential reduction

3/22/11 10:23 AM
OR removed and save
Ready to get qtl est

3/24/11 4:37 PM
Save version where P2 works great

3/24/11 10:08 PM
Save version where P2 works better: use marker space to sort initial samples locally

3/25/11 11:56 AM
-Save version where link delay distribution works, inbound & outbound; use ETX parent as flow parent
(heartbeat works)

3/25/11 4:02 PM
Improve OPMD: beacon carries link delay distribution as well

3/27/11 12:46 PM
Improve OPMD: data pkt loads link delay distribution right before physical tx, not when enqueued
				bcoz of potentially high queueing delay, delay dist can be outdated when tx and conflict w/
				beacon piggybacked delay dist, which is shown by data especially in heavy traffic

3/27/11 8:50 PM
-Recomputation added and save. (heartbeat occasionally stops; works @ 3/31/11 2:58 PM)

3/29/11 11:00 AM
-Taskize local OPMD and save.
Ready to add part to verify and measure conservativeness of OPMD: keep forwarding to min delay parent even if
OPMD rejects

3/29/11 5:08 PM
Ready to change initial sampling

3/31/11 1:05 PM
Bug fix and save: crash caused by recomputation:
		qtl_in_flow_table[fte->flow.rltvDdIdx] = TRUE; in Estimator$NbrTable$setNbDelay
		shoud be qtl_in_flow_table[fte->flow.qtlIdx] = TRUE; instead

3/31/11 4:00 PM
Bug fix: qtl larger than MAX_QUANTILE should be invalid

4/1/11 2:26 PM
Save best version w/o "min delay parent" 
Ready to improve conversion btw quantile & delay and idx;  and make OPMD task shortter

4/1/11 5:19 PM
Save OPMD task of 2 loops
Ready to reduce to 1 loop

4/1/11 7:26 PM
Save 1 loop and ready to change OPMD special case: 1 hop away from sink
change quantile ranges to include 100% (redundacy here)

4/3/11 10:54 AM
Save working version

4/3/11 3:24 PM
Bug fix: ETX change never leads to flow parent recomputation
Ready to add active flow recomputation besides passive recomputation bcoz of neighbor ETX & delay changes

4/3/11 4:04 PM
Save best version so far

4/4/11 12:53 PM
Somehow TinyOS distribution breaks; download the latest and replace
Ready to "taskize" OPMD update upon pkt reception

4/5/11 12:55 AM
Save

4/6/11 10:30 AM
Change inbound link delay table mngmnt policy: only admit "successors"
Bug fix: update all quantiles of OPMD at once, instead of one by one, to prevent inconsistency in updateOPMDTask()

4/7/11 11:04 PM
Save and ready to change OPMD update to atomic to debug OPMD out-of-order

4/8/11 11:36 AM
Save atomic OPMD update which has no out-of-order OPMD
Ready to use all markers estimated in P2, instead of roughly half

4/9/11 2:47 PM
Save and ready to use straight line topology to measure OPMD delta

4/9/11 9:48 PM
Save tOR & tORtest
Ready to test SPEED & MMSPEED & PRAP

4/10/11 8:21 PM
Save version still in debug and ready to recover old version, including TinyOS distribution
Save UartLogC as well

4/11/11 1:22 AM
Ready to impl SPEED on top of tOR

4/11/11 10:51 PM
Save SPEED & MMSPEED

4/12/11 6:01 PM
Change OPMD

4/14/11 3:40 PM
Ready to change OPMD to directly sample e2e delay
Bug fix: Snoop.receive() places predecessors into inbound link delay table
Ready to ditch the entire OPMD

4/17/11 10:47 PM
Ready to remove discrete delay

4/23/11 3:52 PM
Ready to taskize local MD distribution update

4/24/11 12:10 AM
Save the version which reduces root's forwarding to 10% and only once for each pkt & root not recompute MD

4/27/11 2:01 PM
Change quantiles estimated to centered at 90 percentile

4/30/11 3:54 PM
Add interface to scheduler to monitor task queue size
Save and Ready to decompose link delay

5/1/11 2:13 PM
Ready to prioritize forwarding task

5/2/11 12:27 PM
Save prioritized sendTask
Ready to change NB table mngmnt policy and verify MD

5/2/11 8:11 PM
Save and ready to implement Wardrop traffic split

5/3/11 5:56 PM
Save Wardrop

5/3/11 10:01 PM
Ready to consider link delay for pkts fail to get across the link, after tried MAX_RETRIES times

5/4/11 2:52 AM
Ready to change according to Wardrop to make every candidate has some chance to forward even if their
forwarding probability is zero

5/4/11 2:36 PM
Save version that uses MD quantile as satisfiability test and use MD as parent
Ready to implement max MD


5/5/11 5:42 AM
Add ETX parent always has smaller ETX than myself

5/5/11 4:57 PM
Save version w/ the following changes
0. parent always smaller ETX
1. piggyback once instead of round-robin
2. receiver table mngmnt
	step 1: local link
	step 2: LRU
3. which parent to use in different phases(IS phase 1, phase 2, post IS)

5/5/11 5:37 PM
Save version that sample only when neighbor path MD changes??
Ready for sender-based 

5/6/11 9:10 AM
Freeze neighbor table

5/6/11 12:35 PM
Save and ready to implement other protocols

5/6/11 9:05 PM
Save L-ML & tOR based on ML DAG

5/6/11 9:10 PM
Save tOR parameter: normal and parametric

5/9/11 1:59 PM
Save latest SPEED, MMSPEED, tOR, and tOR variants, ML and its variant (ML-based MD)

5/16/11 11:20 AM
Save latest tOR(w/ line topology) and ready to implement adaptive P2

5/20/11 12:15 PM
Verify TinyOS adaptive P2 agrees pretty well w/ Matlab version

05/25/2011 11:33:31 AM 
Save and to change adaptive P2

5/25/11 9:09 PM
Save adaptive P2 based on change detection and ready to use simple fixed window P2

05/26/2011 12:37:11 PM 
Save and to add further ETX constraints on DAG

05/26/2011 03:48:51 PM
Save and to change parent selection

05/26/2011 11:11:06 PM 
Save

06/10/2011 11:50:20 AM 
Save
Ready to restore OPMD but w/ different link delay distribution: (queuing level + 1) * pkt delay quantile
and parent selection:
	min		ETX
	s.t.	MD quantile <= deadline
	
06/13/2011 12:44:25 PM 
Change tOR_Line to exclude queueing delay from link delay

07/08/2011 11:03:27 AM 
Save and then remove conditional compilation for UartLogC



7/10/11 11:07 AM
Ready to implement new MTA protocol w/ queueing & MAC delay

7/10/11 1:24 PM
Save tORtest application

07/13/2011 02:23:37 PM 
Save FIFO MTA and ready for EDF MTA

07/14/2011 03:50:48 PM 
Save EDF MTA and ready to improve parent selection & diffusion

07/20/2011 12:37:11 AM 
Save MTA w/ EDF fixed and ready to implement exponential & normal

07/20/2011 02:37:03 PM 
Save exp & normal and ready to improve EDF by dequeue directly and save trouble of search later on

07/20/2011 03:42:55 PM 
Save improved EDF and ready to replace sendTask with function call to speed up

07/20/2011 05:32:05 PM
Problematic using function call and abort
Ready to implement MAX DELAY and CTP

07/21/2011 09:19:12 PM 
Save heapsort and ready to change aggregation & parent selection

07/24/2011 02:12:24 AM 
Save: fixed aggregation bug causing pkt evaporation; removed root forward; EDF cause dup much more than FIFO

07/24/2011 08:42:15 PM 
Changed congestion criteria from 7/8 to 1/2 of the max queue size

7/25/11 12:50 AM
Change diffusion to make it consistent w/ parent selection: NOT consider congested neighbors

7/25/11 11:16 AM
Save and ready to change congestion avoidance

7/25/11 4:07 PM
Save and ready to change some minor issues

7/25/11 4:31 PM
Bug fix: add parent candidate forwarding frequency update

7/30/11 4:24 PM
Bug fix: dequeued pkt is not used for duplicate detection
Save and ready to implement direct e2e delay sampling

08/01/2011 08:11:20 PM 
Save DIRECT_E2E_SAMPLE and ready for L-ML and ML-based DAG

8/5/11 12:20 PM
Save DIRECT_E2E_SAMPLE & L-ML & ML_DAG

8/9/11 2:52 PM
Bug fix: EDF queue insert new element when empty
Optimize EDF queue

8/15/11 2:57 PM
Save and ready to taskize diffusion

08/24/2011 18:03:32 PM 
Bug fix: data plane stucks bcoz (symptom: a lot of queue overflows at interceptors) of RoutingTable.getNodeDelayEtxs() not called after RoutingTable.getNodeDelayEtxsTasksDone(), which in turn may not be called after RoutingTable.postGetNodeDelayEtxsTasks()

08/25/2011 12:16:24 PM 
Save and ready to improve E2E delay usage according to its estimation

09/07/2011 03:04:19 PM 
Save and ready to impl MCMP

09/12/2011 11:51:52 AM 
Save MCMP (w/o nthroot) and ready to port MMSPEED

09/13/2011 03:43:08 PM 
Save MTA_MDQ, MTA_MDQ_DAG, MTA_MEAN_DELAY

09/18/2011 01:33:28 PM 
Add satisfiability test in MTA_MDQ_DAG and save

09/24/2011 05:35:13 PM 
Save TestMTA and ready to add event traffic

10/03/2011 01:57:35 PM 
Save MTA and TestMTA and ready to add commander-based event traffic

10/13/2011 08:55:54 PM 
Save MTA and ready to implement MTA-P2

10/14/2011 05:19:52 PM 
Bug fix: multipath rej not logged

10/26/2011 06:06:38 PM 
Save and ready to implement single-line topo to measure estimation err

10/31/11 10:42 AM
Bug fix: link delay not updated
Save and ready to improve EWMA/EWMV

11/08/2011 11:10:08 AM 
Save and ready for sender-based pkt time estimation

11/08/2011 09:53:43 PM 
Reverse sender-based pkt time estimation and ready for MTA-LD

11/09/2011 11:30:55 AM 
Save MTA-LD and ready for SDRCS

12/06/2011 05:12:15 PM
Save SDRCS and ready to change MTE

12/13/2011 03:00 PM 
Save TestMTA and ready to change it for Indriya event
