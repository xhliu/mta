%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Author: Xiaohui Liu (whulxh@gmail.com)
%   Date:   9/28/2011
%   Function: prepares figures for loss causes only for MTA and other protocols
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
traffic = 'event';
dir = '/home/xiaohui/Dropbox/tOR/figures';
protocols = {'MTA'; 'MCMP'; 'MM'; 'MM-CD'; 'SDRCS'; 'CTP';};
PROTOCOL_NUM = 6;
CAUSE_NUM = 5;
results = zeros(PROTOCOL_NUM, CAUSE_NUM);
row = 1;
column = 1;
legends = {'Success', 'Overflow', 'Tx failure', 'Rejection', 'Expiration'};
%% MTA
% catch ratio 
t = [
0.940592831452313
0.974038941587619
0.965656195143122
0.958218121259207
0.958892312662903
0.940928272511475
0.965680157497288
0.93973217986859
0.959237187127533
0.946097153759424   
];
results(row, column) = mean(t);
column = column + 1;

% overflow
t = [
0.00037206994915
0.000249625561658
0.001728708078829
0.000125470514429
0
0
0.000237501484384
0.000583975706611
0.000715137067938
0.001083423618635    
];
results(row, column) = mean(t);
column = column + 1;

% air loss
t = [
0.01674314771177
0.009735396904643
0.007260573931082
0.014429109159348
0.009057129586623
0.012481463173505
0.0105688160551
0.014365802382621
0.010011918951132
0.013678223185265    
];
results(row, column) = mean(t);
column = column + 1;

% rej
t = [
0.007689445615776
0.005491762356465
0.005762360262764
0.003513174404015
0.006038086391082
0.006549678695007
0.003918774492341
0.005722961924784
0.006793802145411
0.011646803900325    
];
results(row, column) = mean(t);
column = column + 1;

% expire: either at on the way to sink or at sink
results(row, end) = 1 - sum(results(row, 1 : end - 1));
row = row + 1;
column = 1;

%% MCMP
% catch ratio 
t = [
0.214397728585814
0.115473441108545
0.011365236805589
0.001800115207373
0.234031390350374
0.004330708661417
0.05109022556391
0.023316703447651
0.050462802209787
0
0.000164609053498
0.070132369016067
];
results(row, column) = mean(t);
column = column + 1;

% overflow
t = [
0.333300952736783
0.353883778001778
0.742670502811916
0.771181363742873
0.409203213607412
0.707229099508535
0.750892259202259
0.591127674802516
0.386604584061064
0.514346599158435
0.89926812443773
0.594157395270999
];
results(row, column) = mean(t);
column = column + 1;

% air loss
t = [
0.1147007908338
0.030853312577886
0.110704577706914
0.098512848551121
0.092578355307312
0.078294403635787
0.073162994652245
0.135698093304113
0.111510893453733
0.095851877858673
0.082325142223166
0.125825410989733
];
results(row, column) = mean(t);
column = column + 1;

% rej
t = [
0.004114826576997
0.013010433014771
0
0.117444739514176
0.186361261705983
0.011683467209216
0.000675870620344
0.045395992705829
0.267224303231467
0.270490490596188
0
0.092980076432673
];
results(row, column) = mean(t);
column = column + 1;

% expire: either at on the way to sink or at sink
results(row, end) = 1 - sum(results(row, 1 : end - 1));
row = row + 1;
column = 1;

%% MMSPEED
% catch ratio 
t = [
0.134009661835749
0.013357079252004
0.128542611841727
0.082957610777011
0.006889797989317
0.026961161794149
0.084670760490745
0.083883458909702
0.041010806142101
0.091189663932641
0.031441179420319
0.12062885492089
];
results(row, column) = mean(t);
column = column + 1;

% overflow
t = [
0.488320916905444
0.46249995514318
0.494628562808195
0.483452090181747
0.506258369649731
0.547882289342931
0.431494142229868
0.449343219875927
0.470532286884929
0.551545198117654
0.455674279100853
0.494190207907022
];
results(row, column) = mean(t);
column = column + 1;

% air loss
t = [
0.053845272206304
0.083613111725265
0.065471756819189
0.093435761608758
0.122603439869595
0.113366420307002
0.056907198467997
0.069516955862373
0.083885652834282
0.106018785277664
0.072513733352894
0.125209280076537
];
results(row, column) = mean(t);
column = column + 1;

% rej
t = [
0.010212034383954
0.051601234664735
0.004223984310915
0.007051755593114
0.001384480500409
0.002493396341063
0.000625353829319
0.003475847793119
0.004194282641714
0.001512589673222
0.003537255285507
0.004637380743575
];
results(row, column) = mean(t);
column = column + 1;

% expire: either at on the way to sink or at sink
results(row, end) = 1 - sum(results(row, 1 : end - 1));
row = row + 1;
column = 1;

%% MMSPEEDCD
% catch ratio 
t = [
0.237027792651961
0.043981594658757
0.169090909090909
0.005011042761065
0.050623501878853
0.083928318511027
0.18688351140662
0.018981416423872
0.041677498555748
0.005317701664533
0.06449673687844
0.068504804921758
0.06745243869893
];
results(row, column) = mean(t);
column = column + 1;

% overflow
t = [
0.25009021415948
0.27271624228347
0.28772571148828
0.30534547037655
0.33520083017379
0.31335133176603
0.29751165648124
0.30702161682235
0.37735186380268
0.2988575780868
];
results(row, column) = mean(t);
column = column + 1;

% air loss
t = [
0.2189143766519
0.21847315321294
0.2573498556844
0.24773311747531
0.27268354016582
0.27111830590124
0.26635423749441
0.25577339481957
0.31866001745978
0.25412302933482
];
results(row, column) = mean(t);
column = column + 1;

% rej
t = [
0.10309670990631
0.063783869559224
0.087912754992766
0.035287566152007
0.059116939371888
0.009635331949922
0.074178916006342
0.037684481368401
0.027056817428632
0.15011306512374
];
results(row, column) = mean(t);
column = column + 1;

% expire: either at on the way to sink or at sink
results(row, end) = 1 - sum(results(row, 1 : end - 1));
row = row + 1;
column = 1;

%% SDRCS
% catch ratio 
t = [
0.69558654847021
0.57386786913222
0.65719984615961
0.81697636804308
0.4753466087188
0.71005556157976
0.61798412659532
0.69881624232579
0.67022029622658
];
results(row, column) = mean(t);
column = column + 1;

% overflow
t = [
0.02692485674268
0.14669666937794
0.028015772540359
0.009678727856423
0.11682641412424
0.026793421224697
0.052032479257344
0.062242294973428
0.069338472751891
];
results(row, column) = mean(t);
column = column + 1;

% air loss
t = [
0.2333024957961
0.22803278023502
0.23640605962534
0.14836203819076
0.36705907512621
0.23142903679944
0.25531726663927
0.22097067291018
0.20037180708617
];
results(row, column) = mean(t);
column = column + 1;

% rej
t = [
0.01623818679842
0.010937618819412
0.023824436491014
0.011641546792341
0.000614067879759
0.0037882729238
0.027455734668855
0.001052575450509
0.006278680603518    
];
results(row, column) = mean(t);
column = column + 1;

% expire: either at on the way to sink or at sink
results(row, end) = 1 - sum(results(row, 1 : end - 1));
row = row + 1;
column = 1;

%% CTP
% catch ratio 
t = [
0.71435293547248
0.87387571914872
0.98537216696599
0.90912770188897
0.7072068471761
0.88505217070401
0.98694252301934
0.6794371805059
0.92922080874367
];
results(row, column) = mean(t);
column = column + 1;

% overflow
t = [
0.07776926825872
0.038646722732233
0.002344736367462
0.017256864254555
0.063451776649746
0.026960005086793
0.000525885240154
0.066230520435166
0.022153273347813
];
results(row, column) = mean(t);
column = column + 1;

% air loss
t = [
0.000348116688714
0
0.000180364335959
0
0.000141003948111
0
0
0.000294031167304
0
];
results(row, column) = mean(t);
column = column + 1;

% rej
t = [
0
0
0
0
0
0
0
0
0
];
results(row, column) = mean(t);
column = column + 1;

% expire: either at on the way to sink or at sink
results(row, end) = 1 - sum(results(row, 1 : end - 1));
row = row + 1;
column = 1;

%% protocols
figure;
% title([metric 'for different protocols']);
h = bar(results * 100, 'stack');
set(h, 'linewidth', 2);
% color
colors = [
    128 0 0;
    0 0 143;
    100 0 0;
    0 255 0;
    60 0 0;
] / 255;
for i =1 : length(colors)
    set(h(i), 'facecolor', colors(i, :)) % use color name
end

set(gca, 'xtick', 1:size(protocols, 1), 'XTickLabel', protocols);
set(gca, 'FontSize', 30, 'YGrid', 'on', 'FontWeight', 'bold', 'ytick', 0:10:100);
h_legend = legend(legends);
set(h_legend, 'FontSize', 35);
ylabel('Ratio (%)');
ylim([0 100]);
%%
maximize;
set(gcf, 'Color', 'white');
cd(dir);
str = ['protocol_components_' traffic];
% export_fig(str, '-eps');
% export_fig(str, '-jpg', '-zbuffer');
% saveas(gcf, [str '.fig']);